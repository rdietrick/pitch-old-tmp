package com.pitchplayer.stats.om;
// Generated Oct 21, 2007 12:24:53 PM by Hibernate Tools 3.2.0.b11


import java.util.Date;
import java.util.LinkedHashSet;
import java.util.Set;

import org.apache.log4j.Logger;

import com.pitchplayer.userprofiling.om.User;

/**
 * Game generated by hbm2java
 */
public class GameRecord  implements java.io.Serializable {


     private Integer gameId;
     private User userByWinnerId;
     private User userByQuitterId;
     private byte gameType;
     private Date startDate;
     private Date endDate;
     private Byte sim;
     private Short crntHand;
     private Set<GamePlayerRecord> gamePlayers = new LinkedHashSet<GamePlayerRecord>();

     private Logger log = Logger.getLogger(this.getClass().getName());
     
    public GameRecord() {
    }

	
    public GameRecord(byte gameType) {
        this.gameType = gameType;
    }
    
    public GameRecord(User userByWinnerId, User userByQuitterId, byte gameType, Date startDate, Date endDate, Byte sim, Short crntHand, Set<GamePlayerRecord> gamePlayers) {
       this.userByWinnerId = userByWinnerId;
       this.userByQuitterId = userByQuitterId;
       this.gameType = gameType;
       this.startDate = startDate;
       this.endDate = endDate;
       this.sim = sim;
       this.crntHand = crntHand;
       this.gamePlayers = gamePlayers;
    }
   
    public Integer getGameId() {
        return this.gameId;
    }
    
    public void setGameId(Integer gameId) {
        this.gameId = gameId;
    }
    public User getUserByWinnerId() {
        return this.userByWinnerId;
    }
    
    public void setUserByWinnerId(User userByWinnerId) {
        this.userByWinnerId = userByWinnerId;
    }
    public User getUserByQuitterId() {
        return this.userByQuitterId;
    }
    
    public void setUserByQuitterId(User userByQuitterId) {
        this.userByQuitterId = userByQuitterId;
    }
    public byte getGameType() {
        return this.gameType;
    }
    
    public void setGameType(byte gameType) {
        this.gameType = gameType;
    }
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }
    public Date getEndDate() {
        return this.endDate;
    }
    
    public void setEndDate(Date endDate) {
        this.endDate = endDate;
    }
    public Byte getSim() {
        return this.sim;
    }
    
    public void setSim(Byte sim) {
        this.sim = sim;
    }
    public Set<GamePlayerRecord> getGamePlayers() {
        return this.gamePlayers;
    }
    
    public void setGamePlayers(Set<GamePlayerRecord> gamePlayers) {
        this.gamePlayers = gamePlayers;
    }


	public Short getCrntHand() {
		return crntHand;
	}


	public void setCrntHand(Short crntHand) {
		this.crntHand = crntHand;
	}

	/**
	 * Get the GamePlayerRecord for the player at the given seat.
	 * @param index the seat/index of the requested player. 
	 * @return A GamePlayerRecord object
	 */
	public GamePlayerRecord getGamePlayerRecordAtIndex(int index) {
		if (index < 0 || index >= getGamePlayers().size()) {
			throw new IllegalArgumentException("No player at index " + index);
		}
		for (GamePlayerRecord rec : getGamePlayers()) {
			if (index == rec.getSeat()) {
				return rec;
			}
		}
		throw new IllegalArgumentException("No player at index " + index);
	}

	public void addGamePlayerRecord(GamePlayerRecord playerRec) {
		playerRec.setGameRecord(this);
		gamePlayers.add(playerRec);
	}
}


